<ContentDialog x:Name="page"
    x:Class="spotify.playlist.merger.Views.UnfollowDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:spotify.playlist.merger.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:converters="using:Microsoft.Toolkit.Uwp.UI.Converters"
    xmlns:extensions="using:Microsoft.Toolkit.Uwp.UI.Extensions"
    RequestedTheme="Dark"
    CornerRadius="10"
    BorderBrush="Transparent"
    DataContext="{Binding MainPageInstance, Source={StaticResource Locator}}"
    Background="{ThemeResource ItemBackgroundThemeBrush}">

    <ContentDialog.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <Style x:Key="ListViewItemContainerStyle1" TargetType="ListViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="Background" Value="{ThemeResource ListViewItemBackground}"/>
            <Setter Property="Foreground" Value="{ThemeResource ListViewItemForeground}"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="AllowDrop" Value="False"/>
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
            <Setter Property="FocusVisualMargin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ListViewItemPresenter x:Name="Root" CheckBrush="{ThemeResource ListViewItemCheckBrush}" ContentMargin="{TemplateBinding Padding}" CheckBoxBrush="{ThemeResource ListViewItemCheckBoxBrush}" ContentTransitions="{TemplateBinding ContentTransitions}" CheckMode="{ThemeResource ListViewItemCheckMode}" DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}" DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}" DragBackground="{ThemeResource ListViewItemDragBackground}" DragForeground="{ThemeResource ListViewItemDragForeground}" FocusBorderBrush="{ThemeResource ListViewItemFocusBorderBrush}" FocusVisualMargin="{TemplateBinding FocusVisualMargin}" FocusSecondaryBorderBrush="{ThemeResource ListViewItemFocusSecondaryBorderBrush}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Control.IsTemplateFocusTarget="True" PressedBackground="{ThemeResource ListViewItemBackgroundPressed}" PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackground}" PointerOverForeground="{ThemeResource ListViewItemForegroundPointerOver}" PointerOverBackground="{ThemeResource ListViewItemBackgroundPointerOver}" RevealBorderThickness="{ThemeResource ListViewItemRevealBorderThemeThickness}" ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" RevealBorderBrush="{ThemeResource ListViewItemRevealBorderBrush}" RevealBackground="{ThemeResource ListViewItemRevealBackground}" SelectedForeground="{ThemeResource ListViewItemForegroundSelected}" SelectionCheckMarkVisualEnabled="{ThemeResource ListViewItemSelectionCheckMarkVisualEnabled}" SelectedBackground="{ThemeResource ListViewItemBackgroundSelected}" SelectedPressedBackground="{ThemeResource ListViewItemBackgroundSelectedPressed}" SelectedPointerOverBackground="{ThemeResource ListViewItemBackgroundSelectedPointerOver}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Selected"/>
                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="PointerOver"/>
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPointerOver}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverSelected">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="PointerOver"/>
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPointerOver}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverPressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PressedSelected">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DisabledStates">
                                    <VisualState x:Name="Enabled"/>
                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="Root.RevealBorderThickness" Value="0"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </ListViewItemPresenter>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </ContentDialog.Resources>
    
    <Grid Width="390">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <StackPanel x:Name="Header">
            <StackPanel x:Name="DialogTitle" Orientation="Horizontal"
                            Margin="2 0 0 12">
                <TextBlock Text="Unfollow playlists"
                           FontWeight="Medium"
                           Foreground="{ThemeResource PrimaryForeground}"
                           Style="{StaticResource TitleTextBlockStyle}"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" 
                        CornerRadius="10"
                        VerticalAlignment="Center" 
                        Padding="12 8">
                <StackPanel.Background>
                    <SolidColorBrush Color="Black" Opacity=".2"/>
                </StackPanel.Background>
                <FontIcon Glyph="&#xE946;" FontSize="16" Foreground="{ThemeResource SecondaryThemeBrush}" Margin="0,0,8,0"/>
                <TextBlock FontSize="14"
                               Foreground="{ThemeResource SecondaryForeground}"
                               Margin="0,0,4,0"
                               Text="Showing"/>
                <TextBlock FontSize="14"
                               Foreground="{ThemeResource PrimaryForeground}"
                               Margin="0,0,2,0"
                               Text="{Binding UnfollowPlaylistCollection.Count, FallbackValue=0}"/>
                <TextBlock FontSize="14"
                               Foreground="{ThemeResource PrimaryForeground}"
                               Margin="0,0,4,0"
                               Text="playlists"/>
                <TextBlock FontSize="14"
                               Foreground="{ThemeResource SecondaryForeground}"
                               Margin="0,0,4,0"
                               Text="with"/>
                <TextBlock FontSize="14"
                               Foreground="{ThemeResource PrimaryForeground}"
                               Margin="0,0,2,0"
                               Text="{Binding UnfollowTotalTracks, FallbackValue=0}"/>
                <TextBlock FontSize="14"
                               Foreground="{ThemeResource PrimaryForeground}"
                               Margin="0,0,4,0"
                               Text="tracks"/>
            </StackPanel>
        </StackPanel>
        <ListView x:Name="UnfollowView"
                  Grid.Row="1"
                  MaxHeight="400"
                  MinHeight="0"
                  SelectionMode="None"
                  Margin="0 16"
                  Padding="4 0 0 0"
                  ItemsSource="{Binding UnfollowPlaylistCollection}"
                  ItemContainerStyle="{StaticResource ListViewItemContainerStyle1}">
           
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid Height="56" Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <!--<Grid Height="24" Width="24" Margin="0,0,12,0">
                                <TextBlock FontSize="14"
                                            Text="{Binding IndexC, FallbackValue=0}"
                                            Foreground="{ThemeResource PrimaryForeground}"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center">

                                </TextBlock>
                            </Grid>-->
                            <Grid x:Name="Thumbnail"
                                    Grid.Column="1"
                                    Background="#111111"
                                    Height="40"
                                    Width="40"
                                    Margin="0,0,12,0">
                                <Image Source="{Binding Image}"/>
                            </Grid>
                            <Grid Grid.Column="2" Margin="0,0,16,0" VerticalAlignment="Center">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock x:Name="Title"
                                            FontSize="14"
                                            FontWeight="SemiBold"
                                            Foreground="{ThemeResource PrimaryForeground}"
                                            Text="{Binding Title, FallbackValue=Title}"
                                            TextTrimming="CharacterEllipsis"
                                            TextWrapping="NoWrap"
                                            Margin="0,0,0,0"/>
                                <StackPanel Grid.Row="1" Orientation="Horizontal">
                                    <TextBlock FontSize="14"
                                                Foreground="{ThemeResource SecondaryForeground}"
                                                Text="By"
                                                Margin="0,0,4,0"/>
                                    <TextBlock x:Name="Owner"
                                                           FontSize="14"
                                                       Foreground="{ThemeResource SecondaryForeground}"
                                                           Text="{Binding Owner.Title, FallbackValue=Owner}"
                                                           TextTrimming="CharacterEllipsis"/>
                                </StackPanel>
                            </Grid>
                        </Grid>
                        <Button x:Name="RemoveSelectedButton"
                                extensions:Mouse.Cursor="Hand"
                                VerticalAlignment="Stretch"
                                Grid.Column="1"
                                Margin="0 0 16 0"
                                Padding="16,0"
                                Foreground="{ThemeResource SecondaryForeground}"
                                Command="{Binding ElementName=page, Path=DataContext.RemovePlaylistFromUnfollowCommand}" 
                                CommandParameter="{Binding}"
                                Style="{StaticResource TextBlockButtonStyle}">
                            <FontIcon Glyph="&#xE10A;" FontSize="16"/>
                        </Button>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <Grid Grid.Row="2">
            <TextBlock FontSize="12" TextWrapping="WrapWholeWords" Foreground="{ThemeResource SecondaryForeground}">
                <Span xml:space="preserve"><Run>To recover your deleted playlists, visit  </Run><Hyperlink TextDecorations="None" FontWeight="Medium" NavigateUri="https://www.spotify.com/us/account/recover-playlists/" Foreground="{ThemeResource WarningThemeBrush}">Spotify Help</Hyperlink><Run> to find instructions on how to do so.</Run></Span>
            </TextBlock>
        </Grid>
        <Grid Grid.Row="3" 
              Height="32"
              Margin="0 24 0 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="8"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button Background="{ThemeResource DangerThemeBrush}"
                    CornerRadius="10"
                    Content="Unfollow" 
                    extensions:Mouse.Cursor="Hand"
                    Foreground="{ThemeResource PrimaryForeground}"
                    Command="{Binding ConfirmUnfollowCommand}"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"/>
            <Button Background="{ThemeResource SecondaryItemBackgroundThemeBrush}"
                    Command="{Binding CancelUnfollowCommand}"
                    CornerRadius="10"
                    Content="Cancel" 
                    Grid.Column="2"
                    extensions:Mouse.Cursor="Hand"
                    Foreground="{ThemeResource PrimaryForeground}"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"/>
        </Grid>

        <Grid Grid.RowSpan="10" 
              Background="{ThemeResource LoadingBackgroundThemeBrush}"
              Visibility="{Binding IsDialogBusy, Converter={StaticResource BoolToVisibilityConverter}, FallbackValue=collapsed}">
            <muxc:ProgressRing IsActive="{Binding IsDialogBusy}" Height="48" Width="48" Foreground="{ThemeResource BrandColorThemeBrush}"/>
        </Grid>
    </Grid>
</ContentDialog>
